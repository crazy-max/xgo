name: go-1.14

on:
  pull_request:
    branches:
      - 'master'
    paths:
      - '.github/workflows/go-1.14.yaml'
      - 'docker/go-1.14/**'
  push:
    branches:
      - 'master'
    paths:
      - '.github/workflows/go-1.14.yaml'
      - 'docker/go-1.14/**'
    tags:
      - 'go-1.14-*'

jobs:
  docker:
    strategy:
      matrix:
        go_version:
          - 1.14.0
          - 1.14.1
          - 1.14.2
          - 1.14.3
          - 1.14.4
          - 1.14.5
          - 1.14.6
          - 1.14.7
          - 1.14.8
          - 1.14.9
          - 1.14.10
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      -
        name: Get Latest
        run: |
          echo "##[set-env name=LATEST;]$(cat docker/go-1.14/latest)"
      -
        name: Docker Build
        run: |
          docker build \
            --tag "crazymax/xgo:${{ matrix.go_version }}" \
            --tag "ghcr.io/crazy-max/xgo:${{ matrix.go_version }}" \
            --file ./docker/go-1.14/go-${{ matrix.go_version }}/Dockerfile \
            ./docker/go-1.14/go-${{ matrix.go_version }}
          if [ "$LATEST" == "${{ matrix.go_version }}" ]; then
            docker tag "crazymax/xgo:${{ matrix.go_version }}" "crazymax/xgo:1.14.x"
          fi
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/go-1.14-')
        uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/go-1.14-')
        uses: docker/login-action@v1.6.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Docker Push
        if: startsWith(github.ref, 'refs/tags/go-1.14-')
        run: |
          docker image rm crazymax/xgo:base
          docker push crazymax/xgo
          docker push ghcr.io/crazy-max/xgo
