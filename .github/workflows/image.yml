name: image

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/xgo
  GHCR_SLUG: ghcr.io/crazy-max/xgo
  PLATFORMS: linux/amd64,linux/arm64
  LATEST_117: 1.17.5
  LATEST_116: 1.16.12

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - 1.16.0
          - 1.16.1
          - 1.16.2
          - 1.16.3
          - 1.16.4
          - 1.16.5
          - 1.16.6
          - 1.16.7
          - 1.16.8
          - 1.16.9
          - 1.16.10
          - 1.16.11
          - 1.16.12
          - 1.17.0
          - 1.17.1
          - 1.17.2
          - 1.17.3
          - 1.17.4
          - 1.17.5
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Tags
        id: tags
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const os = require('os');
            const tags = ["${{ matrix.go_version }}"];
            switch ("${{ matrix.go_version }}") {
              case "${{ env.LATEST_117 }}": {
                tags.push("1.17.x", "1.17", "latest");
                break;
              }
              case "${{ env.LATEST_116 }}": {
                tags.push("1.16.x", "1.16");
                break;
              }
            }
            return tags.join(os.EOL);
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: ${{ steps.tags.outputs.result }}
          labels: |
            org.opencontainers.image.title=xgo (go-${{ matrix.go_version }})
            org.opencontainers.image.description=Go CGO cross compiler
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.args.GO_VERSION=${{ matrix.go_version }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
