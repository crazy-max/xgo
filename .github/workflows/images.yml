name: images

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/xgo
  GHCR_SLUG: ghcr.io/crazy-max/xgo

jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.xgo-cache
          key: ${{ runner.os }}-xgo-base-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xgo-base-
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: |
            base
          labels: |
            org.opencontainers.image.title=xgo
            org.opencontainers.image.description=Go CGO cross compiler
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: base
          set: |
            *.cache-from=type=local,src=/tmp/.xgo-cache
            *.cache-to=type=local,dest=/tmp/.xgo-cache-new
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
      -
        # FIXME: https://github.com/docker/build-push-action/issues/252
        name: Move cache
        run: |
          rm -rf /tmp/.xgo-cache
          mv /tmp/.xgo-cache-new /tmp/.xgo-cache

  go:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ base ]
    env:
      BASE_IMAGE: ghcr.io/crazy-max/xgo:base
      LATEST_117: 1.17.0
      LATEST_116: 1.16.7
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - 1.16.0
          - 1.16.1
          - 1.16.2
          - 1.16.3
          - 1.16.4
          - 1.16.5
          - 1.16.6
          - 1.16.7
          - 1.17.0
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Prepare
        id: prep
        run: |
          NL=$'\n'
          TAGS="${{ matrix.go_version }}"
          if [ "${{ env.LATEST_117 }}" = "${{ matrix.go_version }}" ]; then
            TAGS="${TAGS}${NL}1.17.x${NL}latest"
          elif [ "${{ env.LATEST_116 }}" = "${{ matrix.go_version }}" ]; then
            TAGS="${TAGS}${NL}1.16.x"
          fi
          echo "::set-output name=tags::${TAGS}"
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=xgo (go-${{ matrix.go_version }})
            org.opencontainers.image.description=Go CGO cross compiler
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: go-${{ matrix.go_version }}
          push: true
